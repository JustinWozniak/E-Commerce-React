{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"IVE BEEN FIRED\");\n\n  try {\n    const collectionRef = firestore.collection('collecions');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} //    collectionRef\n  //      .get()\n  //      .then(snapshot => {\n  //        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //        dispatch(fetchCollectionsSuccess(collectionsMap));\n  //      })\n  //      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport default function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/ecommerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;;AACJ,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,YAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAkCS,QAAlC,CAAjC;AACH,GAJD,CAII,OAAMG,KAAN,EAAgB,CAEnB,CARwC,CASrC;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AACD,eAAe,UAAUC,qBAAV,GAAkC;AAC7C,QAAMhB,SAAS,CAACI,eAAe,CAACa,uBAAjB,EACXV,qBADW,CAAf;AAEH","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport ShopActionTypes from './shop.types'\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\n\nexport function* fetchCollectionsAsync() {\n    yield console.log(\"IVE BEEN FIRED\")\ntry{\n    const collectionRef = firestore.collection('collecions');\n    const snapshot = yield collectionRef.get()\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n}   catch(error)    {\n    \n}\n    //    collectionRef\n    //      .get()\n    //      .then(snapshot => {\n    //        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //        dispatch(fetchCollectionsSuccess(collectionsMap));\n    //      })\n    //      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport default function* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}