{"ast":null,"code":"import { createSelector } from 'reselect';\nimport collectionItemComponent from '../../components/collection-item/collection-item.component';\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n};\n\nconst selectShop = state => state.shop;\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections.find(collection => collectionItemComponent.id === COLLECTION_ID_MAP[collectionUrlParam]));\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/ecommerce/src/redux/shop/shop.selectors.js"],"names":["createSelector","collectionItemComponent","COLLECTION_ID_MAP","hats","sneakers","jackets","womens","mens","selectShop","state","shop","selectCollection","collectionUrlParam","selectCollections","collections","find","collection","id","mapStateToProps","ownProps","match","params","collectionId"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,uBAAP,MAAoC,4DAApC;AAGA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,CADkB;AAExBC,EAAAA,QAAQ,EAAE,CAFc;AAGxBC,EAAAA,OAAO,EAAE,CAHe;AAIxBC,EAAAA,MAAM,EAAE,CAJgB;AAKxBC,EAAAA,IAAI,EAAE;AALkB,CAA1B;;AAQA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDZ,cAAc,CACZ,CAACa,iBAAD,CADY,EAEZC,WAAW,IAAIA,WAAW,CAACC,IAAZ,CACZC,UAAU,IAAIf,uBAAuB,CAACgB,EAAxB,KAA+Bf,iBAAiB,CAACU,kBAAD,CADlD,CAFH,CADT;;AAUL,MAAMM,eAAe,GAAG,CAACT,KAAD,EAAOU,QAAP,MAAuB;AAC7CH,EAAAA,UAAU,EAACL,gBAAgB,CAACQ,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDb,KAArD;AADkC,CAAvB,CAAxB","sourcesContent":["import { createSelector } from 'reselect';\nimport collectionItemComponent from '../../components/collection-item/collection-item.component';\n\n\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n}\n\nconst selectShop = state => state.shop;\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => collections.find\n      (collection => collectionItemComponent.id === COLLECTION_ID_MAP[collectionUrlParam])\n  );\n\n\n\n\n  const mapStateToProps = (state,ownProps) =>   ({\n    collection:selectCollection(ownProps.match.params.collectionId)(state)\n    })\n"]},"metadata":{},"sourceType":"module"}