{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './sh';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"IVE BEEN FIRED\");\n  const collectionRef = firestore.collection('collecions');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport default function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/ecommerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,MAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,YAArB,CAAtB;AAGAD,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACX,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACD,GALH,EAMGE,KANH,CAMSC,KAAK,IAAIF,QAAQ,CAACV,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAN1B;AAOF;AACD,eAAe,UAAUC,qBAAV,GAAkC;AAC7C,QAAMnB,SAAS,CAACG,eAAe,CAACiB,uBAAjB,EACXd,qBADW,CAAf;AAEH","sourcesContent":["import { takeEvery } from 'redux-saga/effects'\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport ShopActionTypes from './shop.types'\n\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './sh'\n\nexport function* fetchCollectionsAsync() {\n   yield console.log(\"IVE BEEN FIRED\")\n\n   const collectionRef = firestore.collection('collecions');\n\n\n   collectionRef\n     .get()\n     .then(snapshot => {\n       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n       dispatch(fetchCollectionsSuccess(collectionsMap));\n     })\n     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport default function* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}