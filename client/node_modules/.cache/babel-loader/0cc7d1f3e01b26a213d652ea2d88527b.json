{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemsToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemsToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemsToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemsToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemsToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemsToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemsToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartIt);\n};","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/ecommerce/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemsToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemsToRemove","filter","cartIt"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AACxD,QAAMC,gBAAgB,GAAGF,SAAS,CAC7BG,IADoB,CACfC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EAD5B,CAAzB;;AAEA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EAA/B,GACM,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADN,GAEMH,QAHH,CAAP;AAKH;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,cAAL;AAAqBM,IAAAA,QAAQ,EAAE;AAA/B,GAAf,CAAP;AACH,CAXM;AAaP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,iBAAZ,KAAkC;AAChE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,iBAAiB,CAACJ,EADzB,CAAzB;;AAGA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACjC,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,iBAAiB,CAACJ,EAA/D,CAAP;AACH;;AACD,SAAOL,SAAS,CAACM,GAAV,CACHF,QAAQ,IAAIO,MADT,CAAP;AAGH,CAVM","sourcesContent":["export const addItemToCart = (cartItems, cartItemsToAdd) => {\r\n    const existingCartItem = cartItems\r\n        .find(cartItem => cartItem.id === cartItemsToAdd.id)\r\n    if (existingCartItem) {\r\n        return cartItems.map(cartItem =>\r\n            cartItem.id === cartItemsToAdd.id\r\n                ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n                : cartItem\r\n        )\r\n    }\r\n    return [...cartItems, { ...cartItemsToAdd, quantity: 1 }]\r\n}\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemsToRemove) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemsToRemove.id\r\n    )\r\n    if (existingCartItem.quantity === 1) {\r\n        return cartItems.filter(cartItem => cartItem.id !== cartItemsToRemove.id)\r\n    }\r\n    return cartItems.map(\r\n        cartItem => cartIt\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}