{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"IVE BEEN FIRED\");\n\n  try {\n    const collectionRef = firestore.collection('collecions');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport default function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/ecommerce/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;;AACA,MAAI;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,YAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACpB,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACK;AAEJ;AACD,eAAe,UAAUC,qBAAV,GAAkC;AAC7C,QAAMlB,UAAU,CAACK,eAAe,CAACc,uBAAjB,EACZX,qBADY,CAAhB;AAEH","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport ShopActionTypes from './shop.types'\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\n\nexport function* fetchCollectionsAsync() {\n    yield console.log(\"IVE BEEN FIRED\")\n    try {\n        const collectionRef = firestore.collection('collecions');\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n        yield put(fetchCollectionsSuccess(collectionsMap))\n    } catch (error) {\nyield put(fetchCollectionsFailure(error.message))\n    }\n   \n}\nexport default function* fetchCollectionsStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}